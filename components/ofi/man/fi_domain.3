.TH "FI_DOMAIN" 3 "2013-05-01" "libfabric" "Libfabric Programmer's Manual" libfabric
.SH NAME
fi_domain \- Open a fabric access domain
.SH SYNOPSIS
.B "#include <rdma/fabric.h>"
.br
.B "#include <rdma/fi_domain.h>"
.HP
.BI "int fi_fdomain(struct fid_fabric *" fabric ", struct fi_info *" info ", "
.BI "struct fid_domain **" domain ", void *" context ");"
.SH ARGUMENTS
.IP "fabric" 12
Fabric domain
.IP "info" 12
Details about the access domain to be opened, obtained from fi_getinfo.
.IP "domain" 12
On success, points to the opened access domain.
.IP "context" 12
User specified context associated with the domain.  This context is returned as
part of any asynchronous event associated with the domain.
.SH "DESCRIPTION"
Opens a fabric access domain.  An access domain typically refers to a
physical or virtual NIC or hardware port; however, a domain may span across
multiple hardware components for fail-over or data striping purposes.
A domain defines the boundary for associating different resources
together.  Fabric resources belonging to the same domain may share
resources.
.PP
Fabric domains are identified by name.  Domain names are character strings.
By convention, domain names appear similar to path names.  This helps to
identify the specific software and hardware provider associated with a
domain.
.SH "RETURN VALUE"
Returns 0 on success. On error, a negative value corresponding to fabric
errno is returned. Fabric errno values are defined in 
.IR "rdma/fi_errno.h".
.SH "NOTES"
Users should call fi_close to release all resources allocated to the fabric
domain.
.PP
The following fabric resources are associated with access domains:
active endpoints, memory regions, completion event queues, and address
vectors.
.SH "SEE ALSO"
fi_getinfo(3), fi_endpoint(3), fi_ec(3), fi_av(3), fi_mr(3)
